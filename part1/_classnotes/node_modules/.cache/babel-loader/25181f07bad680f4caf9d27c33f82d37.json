{"ast":null,"code":"var _jsxFileName = \"/Users/johannalehto/JohannaCode/fullstackopen2021/part1/classnotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Object as state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState({\n    left: 0,\n    right: 0\n  });\n\n  const handleClickLeft = () => {\n    const newClick = { ...counter,\n      left: counter.left + 1\n    };\n    setCounter(counter);\n  };\n\n  const handleClickRight = () => {\n    const newClick = { ...counter,\n      right: counter.right + 1\n    };\n    setCounter(counter);\n  }; //This is the longer form\n\n  /* const handleClickLeft = () => {\n      const newClick = {\n          left: counter.left + 1,\n          right: counter.right\n      }\n      setCounter(newClick)\n  }\n   const handleClickRight = () => {\n      const newClick = {\n          left: counter.left,\n          right: counter.right +1 \n      }\n      setCounter(newClick)\n  } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [counter.left, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickLeft,\n      children: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickRight,\n      children: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), counter.right]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}; // Two different states\n\n/* const App = () => {\n    const [left, setLeft] = useState(0)\n    const [right, setRight] = useState(0)\n\n    return (\n        <div>\n            {left}\n            <button onClick={() => setLeft(left + 1)}>left\n            </button>\n            <button onClick={() => setRight(right + 1)}>right\n            </button>\n            {right}\n        </div>\n\n    )\n} */\n\n\n_s(App, \"ZjrLKETQ+chF6TrBVYwjhHluxp8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johannalehto/JohannaCode/fullstackopen2021/part1/classnotes/src/App.js"],"names":["React","useState","App","counter","setCounter","left","right","handleClickLeft","newClick","handleClickRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAGA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAClC;AACII,IAAAA,IAAI,EAAE,CADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADkC,CAAtC;;AAOA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,QAAQ,GAAI,EAAC,GAAGL,OAAJ;AAAaE,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAAR,GAAe;AAAlC,KAAlB;AACAD,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAHD;;AAKA,QAAMM,gBAAgB,GAAG,MAAM;AAC3B,UAAMD,QAAQ,GAAK,EAAC,GAAGL,OAAJ;AAAaG,MAAAA,KAAK,EAAEH,OAAO,CAACG,KAAR,GAAgB;AAApC,KAAnB;AACAF,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAHD,CAbc,CAkBd;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGI,sBACI;AAAA,eACKA,OAAO,CAACE,IADb,eAEA;AAAQ,MAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,EAICN,OAAO,CAACG,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA9CD,C,CAkDA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlEMJ,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\"\n\n\n//Object as state\nconst App = () => {\n    const [counter, setCounter] = useState(\n        {\n            left: 0,\n            right: 0\n        }\n    )\n\n    const handleClickLeft = () => {\n        const newClick = ({...counter, left: counter.left + 1})\n        setCounter(counter)\n    }\n\n    const handleClickRight = () => {\n        const newClick =  ({...counter, right: counter.right + 1})\n        setCounter(counter)\n    }\n\n    //This is the longer form\n    /* const handleClickLeft = () => {\n        const newClick = {\n            left: counter.left + 1,\n            right: counter.right\n        }\n        setCounter(newClick)\n    }\n\n    const handleClickRight = () => {\n        const newClick = {\n            left: counter.left,\n            right: counter.right +1 \n        }\n        setCounter(newClick)\n    } */\n\n    return (\n        <div>\n            {counter.left}\n        <button onClick={handleClickLeft}>left</button>\n        <button onClick={handleClickRight}>right</button>\n        {counter.right}\n        </div>\n        \n    )\n\n\n}\n\n\n\n// Two different states\n/* const App = () => {\n    const [left, setLeft] = useState(0)\n    const [right, setRight] = useState(0)\n\n    return (\n        <div>\n            {left}\n            <button onClick={() => setLeft(left + 1)}>left\n            </button>\n            <button onClick={() => setRight(right + 1)}>right\n            </button>\n            {right}\n        </div>\n\n    )\n} */\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}